.has-sidebar {
  article.main-content {
    width: 72%;
    display: inline-block;
    padding-right: 50px;
    margin-right: 3%;
    border-right: 1px solid #efefef;
    @media @768 {
      padding-right: 20px;
      margin-right: 2%;
    }
    @media @640 {
      width: 100%;
      display: block;
      margin: 0;
      padding: 0;
      border-right: none;
      border-bottom: 1px solid #efefef;
      padding-bottom: 20px;
      margin-bottom: 20px;
    }
  }
  div.sidebar {
    width: 24%;
    display: inline-block;
    @media @768 {
      width: 25%;
    }
    @media @640 {
      width: 100%;
      display: block;
    }
  }
}

.no-sidebar {
  padding: 0 100px;
  @media @768 {
    padding: 0 60px;
  }
  @media @600 {
    padding: 0 15px;
  }
}
.flex {
  display: -webkit-box;      /* OLD - iOS 6-, Safari 3.1-6 */
  display: -moz-box;         /* OLD - Firefox 19- (buggy but mostly works) */
  display: -ms-flexbox;      /* TWEENER - IE 10 */
  display: -webkit-flex;     /* NEW - Chrome */
  display: flex;             /* NEW, Spec - Opera 12.1, Firefox 20+ */
}
.flexing (@val: 1, @backupWidth: 20%) {
  -webkit-box-flex: @val;      /* OLD - iOS 6-, Safari 3.1-6 */
  -moz-box-flex: @val;         /* OLD - Firefox 19- */
  width: @backupWidth;         /* For old syntax, otherwise collapses. */
  -webkit-flex: @val;          /* Chrome */
  -ms-flex: @val;              /* IE 10 */
  flex: @val;                  /* NEW, Spec - Opera 12.1, Firefox 20+ */
}

.flex-justify(@justifyStyle) {
  .ms-flex-justify(@justifyStyle);
  -webkit-justify-content: @justifyStyle;
  justify-content: @justifyStyle;
}

.flex-direction(@direction) {
  -ms-flex-direction:@direction;
  -webkit-flex-direction:@direction;
  flex-direction:@direction;
}

.flex-align-items(@alignStyle) {
  -ms-flex-align:@alignStyle;
  -webkit-align-items:@alignStyle;
   align-items: @alignStyle;   
}

.flex-align-self(@selfAlignStyle) {
  .ms-flex-align-self(@selfAlignStyle);
  -webkit-align-self:@selfAlignStyle;
  align-self: @selfAlignStyle;
}

.flex-order(@order) {
  -ms-flex-order:@order;
  -webkit-order:@order;
  order:@order; 
}

.flex-wrap(@wrap) {
  -ms-flex-wrap:@wrap;
  -webkit-flex-wrap:@wrap;
   flex-wrap:@wrap; 
}

/* These are the conditional mixins for the different syntax for IE10 Flexbox*/
.ms-flex-justify(@msJustify) when (@msJustify = space-between)  {
    -ms-flex-pack:justify;
}

.ms-flex-justify(@msJustify) when (@msJustify = space-around) {
    -ms-flex-pack:distribute;
}

.ms-flex-justify(@msJustify) when (@msJustify = flex-end) {
    -ms-flex-pack:end;
}

.ms-flex-justify(@msJustify) when (@msJustify = flex-start) {
    -ms-flex-pack:start;
}

.ms-flex-justify(@msJustify) when (@msJustify = center) {
    -ms-flex-pack:center;
}

.ms-flex-align-self(@msSelfAlign) when (@msSelfAlign = flex-end) {
    -ms-flex-item-align: end;
}

.ms-flex-align-self(@msSelfAlign) when (@msSelfAlign = flex-start) {
    -ms-flex-item-align: start;
}

.ms-flex-align-self(@msSelfAlign) when (@msSelfAlign = auto), (@msSelfAlign = center),(@msSelfAlign = baseline), (@msSelfAlign = stretch) {
    -ms-flex-item-align: @msSelfAlign;
}



.clearfix {
  zoom: 1; 
  display: inline-block; 
  display: block;
  &:after {
    display: block; 
    visibility: hidden; 
    height: 0; 
    clear: both; 
    content: "";
  }
}

.border-radius(@val) {
  .border-radius-sides(@val, @val, @val, @val);
}


.border-radius-sides(@topright: 0, @bottomright: 0, @bottomleft: 0, @topleft: 0) {
  -webkit-border-top-right-radius: @topright;
  -webkit-border-bottom-right-radius: @bottomright;
  -webkit-border-bottom-left-radius: @bottomleft;
  -webkit-border-top-left-radius: @topleft;
  -moz-border-radius-topright: @topright;
  -moz-border-radius-bottomright: @bottomright;
  -moz-border-radius-bottomleft: @bottomleft;
  -moz-border-radius-topleft: @topleft;
  border-top-right-radius: @topright;
  border-bottom-right-radius: @bottomright;
  border-bottom-left-radius: @bottomleft;
  border-top-left-radius: @topleft;
  -moz-background-clip: padding; 
  -webkit-background-clip: padding-box; 
  background-clip: padding-box;
}



/*.box-shadow (@x: 0, @y: 0, @blur: 5px, @color: rgba(0,0,0,.7)) {*/
.box-shadow(@arguments) {
  box-shadow: @arguments;
  -moz-box-shadow: @arguments;
  -webkit-box-shadow: @arguments;
  -ms-box-shadow: @arguments;
  -o-box-shadow: @arguments;
}
.vertical-shadow (@leftOpacity: 0, @rightOpacity: 0.2) {
  background: -webkit-gradient(linear, 0% 0%, 100% 0%, from(rgba(0,0,0,@leftOpacity)), to(rgba(0,0,0,@rightOpacity)));
  background: -moz-gradient(linear, 0% 0%, 100% 0%, from(rgba(0,0,0,@leftOpacity)), to(rgba(0,0,0,@rightOpacity)));
  background: -ms-gradient(linear, 0% 0%, 100% 0%, from(rgba(0,0,0,@leftOpacity)), to(rgba(0,0,0,@rightOpacity)));
  background: -o-gradient(linear, 0% 0%, 100% 0%, from(rgba(0,0,0,@leftOpacity)), to(rgba(0,0,0,@rightOpacity)));
  background: gradient(linear, 0% 0%, 100% 0%, from(rgba(0,0,0,@leftOpacity)), to(rgba(0,0,0,@rightOpacity)));
}

.horizontal-gradient (@topColor, @bottomColor) {
  background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(@topColor), to(@bottomColor));
  background: -moz-gradient(linear, 0% 0%, 0% 100%, from(@topColor), to(@bottomColor));
  background: -ms-gradient(linear, 0% 0%, 0% 100%, from(@topColor), to(@bottomColor));
  background: -o-gradient(linear, 0% 0%, 0% 100%, from(@topColor), to(@bottomColor));
  background: gradient(linear, 0% 0%, 0% 100%, from(@topColor), to(@bottomColor));
}

.vertical-gradient (@topColor, @bottomColor) {
  background: -webkit-gradient(linear, 0% 0%, 100% 0%, from(@topColor), to(@bottomColor));
  background: -moz-gradient(linear, 0% 0%, 100% 0%, from(@topColor), to(@bottomColor));
  background: -ms-gradient(linear, 0% 0%, 100% 0%, from(@topColor), to(@bottomColor));
  background: -o-gradient(linear, 0% 0%, 100% 0%, from(@topColor), to(@bottomColor));
  background: gradient(linear, 0% 0%, 100% 0%, from(@topColor), to(@bottomColor));
}

.gradient(@from, @to, @fromColor, @toColor) {
  background: -webkit-gradient(linear, @from, @to, from(@fromColor), to(@toColor));
  background: -moz-gradient(linear, @from, @to, from(@fromColor), to(@toColor));
  background: -ms-gradient(linear, @from, @to, from(@fromColor), to(@toColor));
  background: -o-gradient(linear, @from, @to, from(@fromColor), to(@toColor));
  background: gradient(linear, @from, @to, from(@fromColor), to(@toColor));
}

.mask-image (@args) {
  mask-image: @arguments;
  -moz-mask-image: @arguments;
  -webkit-mask-image: @arguments;
  -ms-mask-image: @arguments;
  -o-mask-image: @arguments;
}
.mask-size (@args) {
  mask-size: @arguments;
  -moz-mask-size: @arguments;
  -webkit-mask-size: @arguments;
  -ms-mask-size: @arguments;
  -o-mask-size: @arguments;
}
.mask-position (@args) {
  mask-position: @arguments;
  -moz-mask-position: @arguments;
  -webkit-mask-position: @arguments;
  -ms-mask-position: @arguments;
  -o-mask-position: @arguments;
}
.mask-repeat (@args) {
  mask-repeat: @arguments;
  -moz-mask-repeat: @arguments;
  -webkit-mask-repeat: @arguments;
  -ms-mask-repeat: @arguments;
  -o-mask-repeat: @arguments;
}



.backface-visibility (@value: animation-1) {
  backface-visibility: @arguments;
  -webkit-backface-visibility: @arguments;
  -moz-backface-visibility: @arguments;
  -ms-backface-visibility: @arguments;
  -o-backface-visibility: @arguments;
}
.transition (@args) {
  transition: @arguments;
  -moz-transition: @arguments;
  -webkit-transition: @arguments;
  -ms-transition: @arguments;
  -o-transition: @arguments;
}
.transition-transform (@value) {
  transition: transform @arguments;
  -moz-transition: -moz-transform @arguments;
  -webkit-transition: -webkit-transform @arguments;
  -ms-transition: -ms-transform @arguments;
  -o-transition: -o-transform @arguments;
}
.transform (@value) {
  transform: @arguments;
  -moz-transform: @arguments;
  -webkit-transform: @arguments;
  -ms-transform: @arguments;
  -o-transform: @arguments;
}
.transform-origin (@value) {
  transform-origin: @arguments;
  -moz-transform-origin: @arguments;
  -webkit-transform-origin: @arguments;
  -ms-transform-origin: @arguments;
  -o-transform-origin: @arguments;
}
.transform-style (@value: 500px) {
  transform-style: @arguments;
  -moz-transform-style: @arguments;
  -webkit-transform-style: @arguments;
  -ms-transform-style: @arguments;
  -o-transform-style: @arguments;
}
.perspective (@value: 500px) {
  perspective: @arguments;
  -moz-perspective: @arguments;
  -webkit-perspective: @arguments;
  -ms-perspective: @arguments;
  -o-perspective: @arguments;
}
.perspective-origin (@value) {
  perspective-origin: @arguments;
  -moz-perspective-origin: @arguments;
  -webkit-perspective-origin: @arguments;
  -ms-perspective-origin: @arguments;
  -o-perspective-origin: @arguments;
}
.animation-name (@value: animation-1) {
  animation-name: @arguments;
  -moz-animation-name: @arguments;
  -webkit-animation-name: @arguments;
  -ms-animation-name: @arguments;
  -o-animation-name: @arguments;
}
.animation-duration (@value: 250ms) {
  animation-duration: @arguments;
  -moz-animation-duration: @arguments;
  -webkit-animation-duration: @arguments;
  -ms-animation-duration: @arguments;
  -o-animation-duration: @arguments;
}
.animation-iteration-count (@value: 1) {
  animation-iteration-count: @arguments;
  -moz-animation-iteration-count: @arguments;
  -webkit-animation-iteration-count: @arguments;
  -ms-animation-iteration-count: @arguments;
  -o-animation-iteration-count: @arguments;
}
.animation-fill-mode (@value: forwards) {
  animation-fill-mode: @arguments;
  -moz-animation-fill-mode: @arguments;
  -webkit-animation-fill-mode: @arguments;
  -ms-animation-fill-mode: @arguments;
  -o-animation-fill-mode: @arguments;
}
.animation-timing-function (@value: linear) {
  animation-timing-function: @arguments;
  -moz-animation-timing-function: @arguments;
  -webkit-animation-timing-function: @arguments;
  -ms-animation-timing-function: @arguments;
  -o-animation-timing-function: @arguments;
}
.animation-delay (@value: 0) {
  animation-delay: @arguments;
  -moz-animation-delay: @arguments;
  -webkit-animation-delay: @arguments;
  -ms-animation-delay: @arguments;
  -o-animation-delay: @arguments;
}
.transition-delay (@value: 0) {
  transition-delay: @arguments;
  -moz-transition-delay: @arguments;
  -webkit-transition-delay: @arguments;
  -o-transition-delay: @arguments;
}
